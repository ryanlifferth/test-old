@{
    var subject = (dynamic)ViewData["subjectStandardizedParcel"];
    var dataSources = (dynamic)ViewData["DataSources"];

    //var propertyPhotoList = ((IEnumerable<dynamic>) subject.PropertyPhotoList)
    //                            .Cast<dynamic>()
    //                            .Select(x => x.EncodedPhoto.ToString())
    //                            .Cast<string>()
    //                            .Select(x => x.ToString())
    //                            .ToList();
    var propertyPhotoList = ((IEnumerable<dynamic>)subject.PropertyPhotoList)
                                  .Cast<dynamic>()
                                  .Select(x => new { EncodedPhoto = x.EncodedPhoto.ToString(), Title = x.Title.ToString() })
                                  .ToList();
    var selectedPhoto = subject.SelectedPhoto.EncodedPhoto.ToString();
    
}


<div class="grid-item subject">
    <h1>Subject</h1>
    <div class="row">
        <div class="col-md-12">
            @ParcelPhoto(selectedPhoto, propertyPhotoList, "Subject")

            <div class="parcel-detail-link-container">
                <a href="#">Listing</a>
                <a href="#">Deeds</a>
            </div>

        </div>
    </div>
    <div class="row grid-row address-row">
        <div class="col-md-12">
            <address>
                <div class="address">@subject.AddressLine1.Value</div>
                <div class="address-sub">@subject.City.Value, @subject.State.Value @subject.Zip.Value</div>
            </address>
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout("address")
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label">
            Proximity to Subject
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Sale Price
        </div>
        <div class="col-md-6 grid-input">
            <div class="input-group">
                <span class="input-group-addon">$</span>
                <input type="text" id="SalePriceSubject" value="@int.Parse(subject.SalePrice.Value.ToString()).ToString("N0")" pattern="[0-9]*" class="form-control">
            </div>
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
        
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Sale Price/GLA
        </div>
        <div class="col-md-6 grid-input">
            <div class="input-group">
                <span class="input-group-addon">$</span>
                <input type="number" id="GlaPriceSubject" value="@decimal.Parse(subject.SalePricePerGrossLivingArea.Value.ToString()).ToString("F")" class="form-control">
                <span class="input-group-addon trailing sm">sqft</span>
            </div>
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label">
            Data Source(s)
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label">
            Verification Source(s)
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label label-header">
            VALUE ADJUSTMENTS
        </div>
        <div class="col-md-6 grid-label label-header">
            DESCRIPTION
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label">
            Sale or Financing
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label">
            Concessions
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label">
            Date of Sale
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Location
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="LocationSubject" value="@subject.Location.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Leasehold/Fee Simple
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="FeeSimpleSubject" value="@subject.LeaseholdFeeSimple.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Site
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="SiteSubject" value="@subject.SiteArea.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            View
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="ViewSubject" value="@subject.View.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Design (Style)
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="DesignSubject" value="@subject.DesignStyle.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Quality of Construction
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="QualitySubject" value="@subject.QualityOfConstruction.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Actual Age
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="AgeSubject" value="@subject.EffectiveAge.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Condition
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="ConditionSubject" value="@subject.Condition.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label room-count">
            Above Grade Room Count
        </div>
        <div class="col-md-6 room-count grid-input">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-4 grid-label">total</div>
                    <div class="col-md-4 grid-label">bed</div>
                    <div class="col-md-4 grid-label">bath</div>
                </div>
                <div class="row">
                    <div class="col-md-4 grid-input">
                        <input type="text" id="TotalRoomCountSubject" value="@subject.TotalAboveGradeRooms.Value" class="form-control">
                    </div>
                    <div class="col-md-4 grid-input">
                        <input type="text" id="BedroomCountSubject" value="@subject.TotalAboveGradeBedrooms.Value" class="form-control">
                    </div>
                    <div class="col-md-4 grid-input">
                        <input type="text" id="BathroomCountSubject" value="@subject.TotalAboveGradeBathrooms.Value" class="form-control">
                    </div>
                </div>
            </div>
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Gross Living Area
        </div>
        <div class="col-md-6 grid-input">
            <div class="input-group">
                <input type="text" id="GlaSubject" value="@int.Parse(subject.AboveGradeGla.ToString()).ToString("N0")" class="form-control">
                <span class="input-group-addon trailing sm">sqft</span>
            </div>
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Basement & Finished
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="BasementAndFinishedSubject" value="" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Rooms Below Grade
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="RoomsBelowGradeSubject" value="" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Functional Utility
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="FunctionalUtilitySubject" value="@subject.FunctionalUtility.Value" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Heating/Cooling
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="HeatingCoolingSubject" value="" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Energy Efficient Items
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="EnergyEfficientSubject" value="" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Garage/Carport
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="ParkingSubject" value="@subject.GarageCarport" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Porch/Patio/Deck
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="PorchSubject" value="@subject.PorchPatioDeck" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Extra Item 1
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="ExtraItem1Subject" value="@subject.ExtraLineItem" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Extra Item 2
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="ExtraItem2Subject" value="@subject.ExtraLineItem2" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-6 grid-label">
            Extra Item 3
        </div>
        <div class="col-md-6 grid-input">
            <input type="text" id="ExtraItem3Subject" value="@subject.ExtraLineItem3" class="form-control">
        </div>
        @Helpers.ParcelHelpers.BuildInputFlyout()
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label">
            Net Adjustment (Total)
        </div>
    </div>
    <div class="row grid-row">
        <div class="col-md-12 grid-label adjusted-sales-price">
            Adjusted Sale Price of Comparables
        </div>
    </div>

</div>


@helper ParcelPhoto(string imageString, dynamic propertyPhotoList, string compNumber)
{
//TODO:  Extract to helper file
if (string.IsNullOrEmpty(imageString))
{
        <div class="item-photo">
            <span class="fa fa-picture-o fa-5x photo-icon"></span>
            <span class="fa fa-plus fa-2x add-photo-icon"></span>
        </div>
}
else
{
        <div class="item-photo" data-toggle="modal" data-target="#ImagesCompModal@(compNumber)">
            @*<img src="@photoUrl" alt="" style="height: 100px; width: auto; border: 1px solid #000;" />*@
            <img src="data:image/png;base64,@imageString" alt="" />
        </div>
        
    }
}